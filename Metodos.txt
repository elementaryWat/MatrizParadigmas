Codigo de Clase

Object subclass: #Matriz
	instanceVariableNames: 'Nfilas Ncolumnas Arreglo'
	classVariableNames: ''
	package: 'TMatriz'
	
ObtenerElemento:x
	^Arreglo at:x.
	
ObtenerElemento:x y:y
|a|
a := Arreglo at: ((x - 1)* Ncolumnas)+y .
^a.

inicializar: x Ncol: y
	|elemento|
	Arreglo:= Array new:(x*y).
	Nfilas:=x.
	Ncolumnas:=y.
	1 to:(x*y) do: [ :i|  elemento:=(UIManager default request:('Ingrese el elemento ',i asString) initialAnswer: '1') asInteger. Arreglo at:i put:elemento.].
	
inicializar: x Ncol: y Arreglo:Ar
	Arreglo:= Ar.
	Nfilas:=x.
	Ncolumnas:=y.

ObtenerNfilas
^Nfilas.

ObtenerNcols
^Ncolumnas.

Suma: x

|arr m1 n1 m2 n2 a |
m1:= self ObtenerNfilas.
n1:= self ObtenerNcols.
m2:= x ObtenerNfilas.
n2:= x ObtenerNfilas.
arr:= Array new: (m1*n1).

((m1=m2) & (n1=n2)) ifTrue: [1 to: (m1*n1) do:[:i|
		 arr at:i put: (a:= (self ObtenerElemento: i) + (x ObtenerElemento: i))]].^arr.
		 
		 
ObtenerDeterminante2x2
	"comment stating purpose of message"

	| a |
	a:= ((self ObtenerElemento:1)*(self ObtenerElemento:4))-((self ObtenerElemento:2)*(self ObtenerElemento:3)).
	^a.
	
Producto:Matriz2
	| m1 n1 m2 n2 an suma a b|
	m1:=self ObtenerNfilas.
	n1:=self ObtenerNcols.
	m2:=Matriz2 ObtenerNfilas.
	n2:=Matriz2 ObtenerNcols.
	an:=Array new: (m1*n2).
	(n1=m2) ifTrue: [  
			1 to:m1 do: [ :i|
				1 to:n2 do: [ :j|
					suma:=0.
					1 to:n1 do: [ :k|
						a:=self ObtenerElemento:i y:k.
						b:=Matriz2 ObtenerElemento:k y:j.
						suma:=suma+(a*b).
				 	].
					an at:((i-1)*Nfilas+j) put:suma.
				 ]
			]
		].
	^an.
	
	ProductoEs:x
	"comment stating purpose of message"

	| arr |
	arr:= Array new: Nfilas*Ncolumnas.
	1 to: Nfilas*Ncolumnas do: [:i|
		arr at: i put: ((self ObtenerElemento:i)*x) ]. ^arr.
		
		Potencia: x

	|arr mat2 y|
	mat2:= Matriz new.
	mat2 inicializar:Nfilas  Ncol:Ncolumnas  Arreglo: Arreglo. 
	arr:= Array new:Nfilas*Ncolumnas.
	y:= 1 negated .
	(x-1) to: 1 by:y do:[:i| arr:= self Producto:mat2.
		mat2 inicializar: Nfilas Ncol: Ncolumnas  Arreglo: arr ]. ^arr.
		
		
		Igualdad: Matriz2
|n1 m1 n2 m2 C cont1|
n1:= self ObtenerNcols.
m1:= self ObtenerNfilas.
n2:= self ObtenerNcols.
m2:= self ObtenerNfilas.
C:= false. cont1:= 0.
((m1=m2) & (n1=n2))ifTrue: 
		[ 1 to: (m1*n1) do:[:i| 
		 	((self ObtenerElemento:i)=(Matriz2 ObtenerElemento:i)) ifTrue: [
				cont1:= cont1 + 1.
				].].].
	(cont1=(m1*n1)) ifTrue: [ C:= true. ].^C.
